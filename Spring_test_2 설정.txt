[New Spring Project] class 설정을 활용한 Spring 활용방안

1. 기존 Legacy project - mvc 패턴 활용
2. preference 설정 동일 
	- Encoding 설정
	- java builed path / library 수정
	- project propertice 수정

3. 라이브러리 추가
	정리필요

4. HikariCP 라이브러리 추가
	google에 검색후 깃허브에서 atifact 긁어오기

5. llogback.xml 작성
	logger 설정으로 원하는 값을 추출하는 것을 제어 가능
	log4j2 에서도 사용가능하니 잘 확인, 로그 확인하는 연습도 할 것

6. 'src/main/resources' 경로에 log4jdbclog4jdbc.log4j2.properties 파일을 생성
	log4jdbc.spylogdelegator.name=net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator

7. pom.xml에서 build 부분에서 web.xml을 로드하게 되는데 삭제했으니까 다른 내용 입력
	마지막 플러그인 끝난 다음줄에 입력
	아래와 같은 구문은 webxml이 없으면 fail을 띄울거냐고 물어보는거임
	<failOnMissingWebXml>false</failOnMissingWebXml> 

8. Config 패키지에 WebConfig 클래스 생성
	extends AbstractAnnotationConfigDispatcherServletInitializer
	override 메서드들 작성

9. servletConfiguration 구현
	implements WebMvcConfigurer 
	구현 : 
	1. [annotation-driven] => @EnableWebMvc
	2. [resources] => addResourceHandlers method
	3. [InternalResourceViewResolver] => configureViewResolvers method
	4. [StandardServletMultipartResolver] => configureViewResolvers method
